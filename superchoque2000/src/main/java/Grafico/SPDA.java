/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Grafico;

import dao.ConexaoBanco;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario03
 */
public class SPDA extends javax.swing.JInternalFrame {

    private ArrayList<Float> resultados = new ArrayList<>();
    private ArrayList<Float> valor = new ArrayList<>();
    private List<Integer> indices;
    private ConexaoBanco dao = new ConexaoBanco();
    double soma = 0.0;

    private int nivelDeProtecao, pontosAterramento, blocos;
    private String edificacao;
    private String material, servico;
    private float perimetro, altura, perimetroCaptor;
    private double quantDescidas, quantAnel, barra, diasCaptor, diasAnel, diasDescidas, diasAterramento, diasProtecaoMecanica, aliquota;
    double valorImposto = 0.0;
    double porcemtagemMaterial = 20.0 / 100;
    double porcemtagemMaodeObra = 40.0 / 100;
    double margemMaterial = 0;
    double margemMaodeObra = 0;
    double tudo = 0;
    double comissao = 10.0 / 100;
    double valorComissao = 0;
    double total = 0.0;

    /**
     * Creates new form SPDA
     */
    public SPDA() {
        initComponents();
        habilitaCampos(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbxMaterial = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfImposto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jbxNP = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jtfCaptor = new javax.swing.JTextField();
        jtfPerimetro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfAltura = new javax.swing.JTextField();
        jbFechar = new javax.swing.JButton();

        setTitle("SPDA");

        jbNovo.setIcon(new javax.swing.ImageIcon("C:\\programacao\\java\\superchoque2000\\src\\main\\java\\img\\novo.png")); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbExcluir.setIcon(new javax.swing.ImageIcon("C:\\programacao\\java\\superchoque2000\\src\\main\\java\\img\\excluir.png")); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbxMaterial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "barra chata", "cobre" }));

        jLabel1.setText("material");

        jLabel2.setText("imposto (%)");

        jtfImposto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfImpostoActionPerformed(evt);
            }
        });

        jLabel3.setText("Altura (h)");

        jLabel4.setText("perímetro da edificação");

        jLabel5.setText("perímetro do captor");

        jbxNP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        jButton1.setText("calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtfCaptor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCaptorActionPerformed(evt);
            }
        });

        jLabel6.setText("nível de Proteção");

        jtfAltura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAlturaActionPerformed(evt);
            }
        });

        jbFechar.setIcon(new javax.swing.ImageIcon("C:\\programacao\\java\\superchoque2000\\src\\main\\java\\img\\sair.png")); // NOI18N
        jbFechar.setText("Fechar");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jbxMaterial, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1))
                    .addComponent(jtfImposto, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jtfPerimetro, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jtfCaptor, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbxNP, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jbNovo)
                .addGap(18, 18, 18)
                .addComponent(jbExcluir)
                .addGap(18, 18, 18)
                .addComponent(jbFechar)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo)
                    .addComponent(jbExcluir)
                    .addComponent(jbFechar))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbxMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCaptor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbxNP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfImposto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfPerimetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        habilitaBotoes(false);
        habilitaCampos(true);
        limpaCampos();
        jtfImposto.requestFocus();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int opcao = JOptionPane.showConfirmDialog(
                null,
                "Tem certeza que deseja excluir todos os dados?",
                "Confirmação de Exclusão",
                JOptionPane.YES_NO_OPTION);
        if (opcao == JOptionPane.YES_OPTION) {
            limpaCampos();
            JOptionPane.showMessageDialog(null, "Todos os dados foram excluídos.");
        } else {
            JOptionPane.showMessageDialog(null, "Exclusão cancelada.");
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jtfImpostoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfImpostoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfImpostoActionPerformed

    private void jtfAlturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAlturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAlturaActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jtfCaptorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCaptorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCaptorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        calcular();
        StringBuilder mensagem = new StringBuilder();

        // Construir a mensagem com base nos resultados
        for (int i = 0; i < resultados.size() - 1; i++) {
            mensagem.append(dao.obterNomeMaterial(indices.get(i)))
                    .append(": ")
                    .append(" | Quantidade: ")
                    .append(resultados.get(i))
                    .append("\n");
        }

        // Exibir a mensagem em um JOptionPane
        JOptionPane.showMessageDialog(
                null,
                mensagem.toString(),
                "Resultados",
                JOptionPane.INFORMATION_MESSAGE);


    }//GEN-LAST:event_jButton1ActionPerformed

    public void habilitaCampos(boolean estado) {
        jtfImposto.setEnabled(estado);
        jtfPerimetro.setEnabled(estado);
        jtfAltura.setEnabled(estado);
        jbxMaterial.setEnabled(estado);
        jtfCaptor.setEnabled(estado);
        jtfCaptor.setEnabled(estado);
        jbxNP.setEnabled(estado);

    }

// limpar  campos do formulairio
    public void limpaCampos() {
        jtfImposto.setText("");
        jtfPerimetro.setText("");
        jtfAltura.setText("");
        jtfCaptor.setText("");
        jtfCaptor.setText("");

    }

    public void habilitaBotoes(boolean estado) {
        jbNovo.setEnabled(estado);

        jbExcluir.setEnabled(estado);

    }

    public void calcular() {
        int distDescida = 0;
        int distCaptor = 0;

        String itemSelecionadoNP = (String) jbxNP.getSelectedItem();

        try {
            int NP = Integer.parseInt(itemSelecionadoNP);
            JOptionPane.showMessageDialog(null, "Número Inteiro: " + NP);

            switch (NP) {
                case 2, 1 -> {
                    distDescida = 12;
                    distCaptor = 10;
                    break;
                }
                case 3 -> {
                    distDescida = 18;
                    distCaptor = 15;
                    break;
                }
                case 4 -> {
                    distDescida = 24;
                    distCaptor = 20;
                    break;
                }
                default -> {
                }

            }
            String material = (String) jbxMaterial.getSelectedItem();
            String texto = jtfImposto.getText();
            String texto2 = jtfAltura.getText();
            String texto3 = jtfPerimetro.getText();
            String texto4 = jtfCaptor.getText();
            double altura = Double.parseDouble(texto);
            double perimetroCaptor = Double.parseDouble(texto);
            double perimetro = Double.parseDouble(texto);
            double aliquota = Double.parseDouble(texto);
            quantDescidas = Math.ceil(perimetro / distDescida);
            quantAnel = (Math.ceil(altura / distCaptor)) - 1;

            if (material.equalsIgnoreCase("barra chata")) {

                barra = Math.ceil(((perimetro / 6) * quantAnel) + (perimetroCaptor / 6) + ((altura / 6) * quantDescidas));
                diasCaptor = ((barra * 6) / 108);
                diasAnel = ((barra * 6) / 36);
                diasDescidas = ((barra * 6) / 48);
                diasAterramento = (diasDescidas / 6);
                diasProtecaoMecanica = (diasDescidas / 6);

                resultados.add((float) (quantDescidas * 2)); // cordoalha de 70mm²
                resultados.add((float) (quantAnel + 1)); // caixa de bep 9
                resultados.add((float) (quantDescidas * 2)); // clips de 1"
                resultados.add((float) (quantDescidas * 1.5)); // terminal de compressao de 70mm.
                resultados.add((float) (quantDescidas * 0.03)); // veda calha.
                resultados.add((float) (barra)); // barra chata.
                resultados.add((float) (quantDescidas * 4)); // abraçadeira
                resultados.add((float) (quantDescidas)); // eletroduto
                resultados.add((float) (quantDescidas)); // luva de emenda 70mm
                resultados.add((float) (quantDescidas)); // caixa de inspeção suspença
                resultados.add((float) (barra * 2)); // parafuso de emenda
                resultados.add((float) (quantDescidas * 4)); // parafuso de 8 mm
                resultados.add((float) (barra * 8)); // parafuso de 6mm
                resultados.add((float) (3)); // dps
                resultados.add((float) (((diasAnel + diasCaptor + diasDescidas) / 2) + diasAterramento + diasProtecaoMecanica)); // dias de trablho do instalador e do encarregado

                indices = Arrays.asList(9, 16, 24, 35, 39, 42, 43, 45, 46, 48, 74, 75, 76, 77);

                for (int j = 0; j < resultados.size() - 1; j++) {
                    int indice = indices.get(j);
                    valor.add(resultados.get(j) * dao.obterValorUnidade(indice));
                }

                valor.add(resultados.get(14) * 240);
                valor.add(resultados.get(14) * 180);

            } else if (material.equalsIgnoreCase("cobre")) {

                resultados.add((float) ((altura * quantDescidas) + (perimetro * quantAnel) + perimetroCaptor)); // cabo de cobre nu 50mm
                diasCaptor = (resultados.get(0) / 120);
                diasAnel = (resultados.get(0) / 36);
                diasDescidas = (resultados.get(0) / 48) / (quantDescidas);
                diasAterramento = (quantDescidas / 6);
                diasProtecaoMecanica = (quantDescidas / 6);
                resultados.add(resultados.get(0) * 2); // parafuso de 6 mm completo
                resultados.add(resultados.get(0)); // isolador e mini captor de aluminio
                resultados.add((float) (((diasAnel + diasCaptor + diasDescidas) / 3) + (diasAterramento + diasProtecaoMecanica)));

                valor.add(resultados.get(0) * dao.obterValorUnidade(5));
                valor.add(resultados.get(1) * dao.obterValorUnidade(76));
                valor.add(resultados.get(2) * dao.obterValorUnidade(50));
                valor.add(resultados.get(3) * 240);//dia  de encarregado
                valor.add(resultados.get(3) * 180);//dia de instalador

                indices = Arrays.asList(5, 76, 50);

                double imposto = aliquota / 100;
                for (float valor : valor) {
                    soma += valor;
                }

                if (!servico.equalsIgnoreCase("laudo")) {
                    margemMaodeObra = valor.get(valor.size() - 1) * porcemtagemMaodeObra;
                    margemMaterial = (soma * porcemtagemMaterial);

                    valorComissao = (soma + margemMaterial + margemMaodeObra) * comissao;
                    tudo = (soma + margemMaterial + margemMaodeObra + valorComissao);
                    valorImposto = (tudo * imposto);
                    total = tudo + valorImposto;
                }
            }
        } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Erro: O texto não é um número inteiro válido. Detalhes: " + ex.getMessage());
                
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JComboBox<String> jbxMaterial;
    private javax.swing.JComboBox<String> jbxNP;
    private javax.swing.JTextField jtfAltura;
    private javax.swing.JTextField jtfCaptor;
    private javax.swing.JTextField jtfImposto;
    private javax.swing.JTextField jtfPerimetro;
    // End of variables declaration//GEN-END:variables
}
